services:
  # Backend NestJS API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: token-mint-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    env_file:
      - ./server/.env
    restart: unless-stopped
    networks:
      - token-mint-network
    volumes:
      - backend_logs:/app/logs
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: "0.5"
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React App
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL:-http://localhost:3001}
    container_name: token-mint-frontend
    ports:
      - "80:80"
    env_file:
      - ./client/.env
    restart: unless-stopped
    networks:
      - token-mint-network
    volumes:
      - frontend_logs:/var/log/nginx
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: "0.3"
        reservations:
          memory: 256M
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (untuk production dengan SSL)
  nginx:
    image: nginx:alpine
    container_name: token-mint-nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    restart: unless-stopped
    networks:
      - token-mint-network
    depends_on:
      - frontend
      - backend
    profiles:
      - production
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: "0.2"

networks:
  token-mint-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  backend_logs:
  frontend_logs:
  nginx_logs:
